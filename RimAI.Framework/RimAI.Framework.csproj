<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <AssemblyName>RimAI.Framework</AssemblyName>
    <RootNamespace>RimAI.Framework</RootNamespace>
    <LangVersion>latest</LangVersion>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <OutputPath>Assemblies/</OutputPath>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <!-- RimWorld and other references via NuGet packages -->
    <PackageReference Include="Krafs.Rimworld.Ref" Version="1.6.4518" />
    <!-- Use Newtonsoft.Json for JSON handling -->
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\RimAI.Framework.Contracts\RimAI.Framework.Contracts.csproj" />
  </ItemGroup>

  <!-- 
    Post-Build Event: A robust, explicit process to deploy the mod.
    This method is less "elegant" but far more reliable than smart wildcards.
  -->
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <PropertyGroup>
      <!-- Cross-platform RimWorld directory detection -->
      <!-- Windows (Steam) -->
      <RimWorldDir Condition="$([MSBuild]::IsOSPlatform('Windows'))">C:\Program Files (x86)\Steam\steamapps\common\RimWorld</RimWorldDir>
      <!-- macOS (Steam) -->
      <RimWorldDir Condition="$([MSBuild]::IsOSPlatform('OSX'))">$(HOME)/Library/Application Support/Steam/steamapps/common/RimWorld/RimWorldMac.app/</RimWorldDir>
      <!-- Linux (Steam) -->
      <RimWorldDir Condition="$([MSBuild]::IsOSPlatform('Linux'))">$(HOME)/.steam/steam/steamapps/common/RimWorld</RimWorldDir>
      
      <!-- Fallback: Allow manual override via environment variable -->
      <RimWorldDir Condition="'$(RIMWORLD_DIR)' != ''">$(RIMWORLD_DIR)</RimWorldDir>
      
      <ModDir>$(RimWorldDir)/Mods/RimAI_Framework</ModDir>
    </PropertyGroup>

    <!-- Step 1: Clean the destination directory to prevent stale files. -->
    <Message Text="Step 1: Cleaning destination directory: $(ModDir)" Importance="high" />
    <RemoveDir Directories="$(ModDir)" />

    <!-- Step 2: Explicitly copy each required folder and file. -->
    <Message Text="Step 2: Copying static mod assets..." Importance="high" />

    <!-- Copy the About folder -->
    <ItemGroup>
      <AboutFiles Include="About\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(AboutFiles)" DestinationFolder="$(ModDir)\About\%(RecursiveDir)" />

    <!-- Copy the Languages folder -->
    <ItemGroup>
      <LanguageFiles Include="Languages\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(LanguageFiles)" DestinationFolder="$(ModDir)\Languages\%(RecursiveDir)" />

    <!-- Copy the loadFolders.xml file -->
    <Copy SourceFiles="loadFolders.xml" DestinationFolder="$(ModDir)" />

    <!-- Step 3: Copy the compiled assembly to the root Assemblies folder (compatible with both 1.5 and 1.6). -->
    <Message Text="Step 3: Copying compiled DLL to $(ModDir)\Assemblies" Importance="high" />
    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(ModDir)\Assemblies" />
    <Copy SourceFiles="$(ProjectDir)$(OutDir)$(AssemblyName).pdb" DestinationFolder="$(ModDir)\Assemblies" Condition="Exists('$(ProjectDir)$(OutDir)$(AssemblyName).pdb')" />

    <!-- Step 4: 复制同目录下的额外 Framework DLL（例如 Contracts） -->
    <ItemGroup>
      <ExtraFrameworkDlls Include="$(ProjectDir)$(OutDir)RimAI.Framework.*.dll" Exclude="$(TargetPath)" />
    </ItemGroup>
    <Copy SourceFiles="@(ExtraFrameworkDlls)" DestinationFolder="$(ModDir)\Assemblies" Condition="@(ExtraFrameworkDlls) != ''" />

    <!-- Step 5: Rename Newtonsoft.Json.dll to ensure it loads before our mod -->
    <Message Text="Step 4: Renaming Newtonsoft.Json.dll for proper load order" Importance="high" />
    <Move SourceFiles="$(ProjectDir)$(OutDir)Newtonsoft.Json.dll" DestinationFiles="$(ProjectDir)$(OutDir)000_Newtonsoft.Json.dll" Condition="Exists('$(ProjectDir)$(OutDir)Newtonsoft.Json.dll')" />
    <Copy SourceFiles="$(ProjectDir)$(OutDir)000_Newtonsoft.Json.dll" DestinationFolder="$(ModDir)\Assemblies" Condition="Exists('$(ProjectDir)$(OutDir)000_Newtonsoft.Json.dll')" />

    <Message Text="RimAI Framework successfully deployed!" Importance="high" />
  </Target>

</Project>
